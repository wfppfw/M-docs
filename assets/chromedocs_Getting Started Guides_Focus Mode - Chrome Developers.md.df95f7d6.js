import{_ as e,o as t,c as o,a as r}from"./app.04ed3e28.js";const f=JSON.parse('{"title":"Focus Mode","description":"","frontmatter":{},"headers":[{"level":2,"title":"# Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"# Before you start","slug":"before-you-start","link":"#before-you-start","children":[]},{"level":2,"title":"# Build the extension","slug":"build-the-extension","link":"#build-the-extension","children":[{"level":3,"title":"# Step 1: Add the extension data and icons","slug":"step-1-add-the-extension-data-and-icons","link":"#step-1-add-the-extension-data-and-icons","children":[]},{"level":3,"title":"# Step 2: Initialize the extension","slug":"step-2-initialize-the-extension","link":"#step-2-initialize-the-extension","children":[]},{"level":3,"title":"# Step 3: Enable the extension action","slug":"step-3-enable-the-extension-action","link":"#step-3-enable-the-extension-action","children":[]},{"level":3,"title":"# Step 4: Track the state of the current tab","slug":"step-4-track-the-state-of-the-current-tab","link":"#step-4-track-the-state-of-the-current-tab","children":[]},{"level":3,"title":"# Step 5: Add or remove the stylesheet","slug":"step-5-add-or-remove-the-stylesheet","link":"#step-5-add-or-remove-the-stylesheet","children":[]},{"level":3,"title":"# Optional: Assign a keyboard shortcut","slug":"optional-assign-a-keyboard-shortcut","link":"#optional-assign-a-keyboard-shortcut","children":[]}]},{"level":2,"title":"# Test that it works","slug":"test-that-it-works","link":"#test-that-it-works","children":[{"level":3,"title":"# Load your extension locally","slug":"load-your-extension-locally","link":"#load-your-extension-locally","children":[]},{"level":3,"title":"# Test the extension on a documentation page","slug":"test-the-extension-on-a-documentation-page","link":"#test-the-extension-on-a-documentation-page","children":[]}]},{"level":2,"title":"# \u{1F3AF} Potential enhancements","slug":"\u{1F3AF}-potential-enhancements","link":"#\u{1F3AF}-potential-enhancements","children":[]},{"level":2,"title":"# Keep building!","slug":"keep-building","link":"#keep-building","children":[]},{"level":2,"title":"# Continue exploring","slug":"continue-exploring","link":"#continue-exploring","children":[]}],"relativePath":"chromedocs/Getting Started Guides/Focus Mode - Chrome Developers.md","lastUpdated":1679926139000}'),n={name:"chromedocs/Getting Started Guides/Focus Mode - Chrome Developers.md"},s=r(`<ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#overview" target="_blank" rel="noreferrer">Overview</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#prereq" target="_blank" rel="noreferrer">Before you start</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#build" target="_blank" rel="noreferrer">Build the extension</a><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-1" target="_blank" rel="noreferrer">Step 1: Add the extension data and icons</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-2" target="_blank" rel="noreferrer">Step 2: Initialize the extension</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-3" target="_blank" rel="noreferrer">Step 3: Enable the extension action</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-4" target="_blank" rel="noreferrer">Step 4: Track the state of the current tab</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-5" target="_blank" rel="noreferrer">Step 5: Add or remove the stylesheet</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-6" target="_blank" rel="noreferrer">Optional: Assign a keyboard shortcut</a></li></ul></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#try-out" target="_blank" rel="noreferrer">Test that it works</a><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#locally" target="_blank" rel="noreferrer">Load your extension locally</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#open-sites" target="_blank" rel="noreferrer">Test the extension on a documentation page</a></li></ul></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#challenge" target="_blank" rel="noreferrer">\u{1F3AF} Potential enhancements</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue" target="_blank" rel="noreferrer">Keep building!</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue-exploring" target="_blank" rel="noreferrer">Continue exploring</a></li></ul><h1 id="focus-mode" tabindex="-1">Focus Mode <a class="header-anchor" href="#focus-mode" aria-hidden="true">#</a></h1><p>Simplify the styling of the current page by clicking the extension toolbar icon.</p><p>Published on Tuesday, October 4, 2022</p><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#overview" target="_blank" rel="noreferrer">Overview</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#prereq" target="_blank" rel="noreferrer">Before you start</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#build" target="_blank" rel="noreferrer">Build the extension</a><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-1" target="_blank" rel="noreferrer">Step 1: Add the extension data and icons</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-2" target="_blank" rel="noreferrer">Step 2: Initialize the extension</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-3" target="_blank" rel="noreferrer">Step 3: Enable the extension action</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-4" target="_blank" rel="noreferrer">Step 4: Track the state of the current tab</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-5" target="_blank" rel="noreferrer">Step 5: Add or remove the stylesheet</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-6" target="_blank" rel="noreferrer">Optional: Assign a keyboard shortcut</a></li></ul></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#try-out" target="_blank" rel="noreferrer">Test that it works</a><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#locally" target="_blank" rel="noreferrer">Load your extension locally</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#open-sites" target="_blank" rel="noreferrer">Test the extension on a documentation page</a></li></ul></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#challenge" target="_blank" rel="noreferrer">\u{1F3AF} Potential enhancements</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue" target="_blank" rel="noreferrer">Keep building!</a></li><li><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue-exploring" target="_blank" rel="noreferrer">Continue exploring</a></li></ul><h2 id="overview" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#overview" target="_blank" rel="noreferrer">#</a> Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>This tutorial builds an extension that simplifies the styling of the Chrome extension and Web store documentation pages so that they are easier to read.</p><p>In this guide, we\u2019re going to explain how to do the following:</p><ul><li>Use the extension service worker as the event coordinator.</li><li>Preserve user privacy through the <code>activeTab</code> permission.</li><li>Run code when the user clicks the extension toolbar icon.</li><li>Insert and remove a stylesheet using the <a href="https://developer.chrome.com/docs/extensions/reference/scripting/" target="_blank" rel="noreferrer">Scripting</a> API.</li><li>Use a keyboard shortcut to execute code.</li></ul><h2 id="before-you-start" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#prereq" target="_blank" rel="noreferrer">#</a> Before you start <a class="header-anchor" href="#before-you-start" aria-hidden="true">#</a></h2><p>This guide assumes that you have basic web development experience. We recommend checking out <a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/" target="_blank" rel="noreferrer">Development Basics</a> for an introduction to the extension development workflow.</p><h2 id="build-the-extension" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#build" target="_blank" rel="noreferrer">#</a> Build the extension <a class="header-anchor" href="#build-the-extension" aria-hidden="true">#</a></h2><p>To start, create a new directory called <code>focus-mode</code> that will hold the extension&#39;s files. If you prefer, you can download the complete source code on <a href="https://github.com/GoogleChrome/chrome-extensions-samples/tree/main/tutorials/focus-mode" target="_blank" rel="noreferrer">GitHub</a>.</p><h3 id="step-1-add-the-extension-data-and-icons" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-1" target="_blank" rel="noreferrer">#</a> Step 1: Add the extension data and icons <a class="header-anchor" href="#step-1-add-the-extension-data-and-icons" aria-hidden="true">#</a></h3><p>Create a file called <code>manifest.json</code> and include the following code.</p><pre><code>{  &quot;manifest_version&quot;: 3,  &quot;name&quot;: &quot;Focus Mode&quot;,  &quot;description&quot;: &quot;Enable reading mode on Chrome&#39;s official Extensions and Chrome Web Store documentation.&quot;,  &quot;version&quot;: &quot;1.0&quot;,  &quot;icons&quot;: {    &quot;16&quot;: &quot;images/icon-16.png&quot;,    &quot;32&quot;: &quot;images/icon-32.png&quot;,    &quot;48&quot;: &quot;images/icon-48.png&quot;,    &quot;128&quot;: &quot;images/icon-128.png&quot;  }}
</code></pre><p>To learn more about these manifest keys, check out the Reading time tutorial that explains the extension&#39;s <a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-reading-time#step-1" target="_blank" rel="noreferrer">metadata</a> and <a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-reading-time#step-2" target="_blank" rel="noreferrer">icons</a> in more detail.</p><p>Create an <code>images</code> folder then <a href="https://github.com/GoogleChrome/chrome-extensions-samples/tree/main/tutorials/focus-mode/images" target="_blank" rel="noreferrer">download the icons</a> into it.</p><h3 id="step-2-initialize-the-extension" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-2" target="_blank" rel="noreferrer">#</a> Step 2: Initialize the extension <a class="header-anchor" href="#step-2-initialize-the-extension" aria-hidden="true">#</a></h3><p>Extensions can monitor browser events in the background using the <a href="https://developer.chrome.com/docs/extensions/mv3/service_workers/" target="_blank" rel="noreferrer">extension&#39;s service worker</a>. Service workers are special JavaScript environments that are loaded to handle events and terminated when they&#39;re no longer needed.</p><p>Start by registering the service worker in the <code>manifest.json</code> file:</p><pre><code>{  ...  &quot;background&quot;: {    &quot;service_worker&quot;: &quot;background.js&quot;  },  ...}
</code></pre><p>Create a file called <code>background.js</code> and add the following code:</p><pre><code>chrome.runtime.onInstalled.addListener(() =&gt; {  chrome.action.setBadgeText({    text: &quot;OFF&quot;,  });});
</code></pre><p>The first event our service worker will listen for is <a href="https://developer.chrome.com/docs/extensions/reference/runtime#event-onInstalled" target="_blank" rel="noreferrer"><code>runtime.onInstalled()</code></a>. This method allows the extension to set an initial state or complete some tasks on installation. Extensions can use the <a href="https://developer.chrome.com/docs/extensions/reference/storage/" target="_blank" rel="noreferrer">Storage API</a> and <a href="https://developer.mozilla.org/docs/Web/API/IndexedDB_API" target="_blank" rel="noreferrer">IndexedDB</a> to store the application state. In this case, though, since we&#39;re only handling two states, we will use the the <em>action&#39;s badge</em> text itself to track whether the extension is &#39;ON&#39; or &#39;OFF&#39;.</p><p>Key Term</p><p>The <a href="https://developer.chrome.com/docs/extensions/reference/action/#badge" target="_blank" rel="noreferrer">action&#39;s badge</a> is a colored banner on top of the extension action (toolbar icon).</p><h3 id="step-3-enable-the-extension-action" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-3" target="_blank" rel="noreferrer">#</a> Step 3: Enable the extension action <a class="header-anchor" href="#step-3-enable-the-extension-action" aria-hidden="true">#</a></h3><p>The <em>extension action</em> controls the extension\u2019s toolbar icon. So whenever the user clicks on the extension action, it will either run some code (like in this example) or display a popup. Add the following code to declare the extension action in the <code>manifest.json</code> file:</p><pre><code>{  ...  &quot;action&quot;: {    &quot;default_icon&quot;: {      &quot;16&quot;: &quot;images/icon-16.png&quot;,      &quot;32&quot;: &quot;images/icon-32.png&quot;,      &quot;48&quot;: &quot;images/icon-48.png&quot;,      &quot;128&quot;: &quot;images/icon-128.png&quot;    }  },  ...}
</code></pre><h4 id="use-the-activetab-permission-to-protect-user-privacy" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#active-tab" target="_blank" rel="noreferrer">#</a> Use the activeTab permission to protect user privacy <a class="header-anchor" href="#use-the-activetab-permission-to-protect-user-privacy" aria-hidden="true">#</a></h4><p>The <a href="https://developer.chrome.com/docs/extensions/mv3/manifest/activeTab/" target="_blank" rel="noreferrer"><code>activeTab</code></a> permission grants the extension <em>temporary</em> ability to execute code on the currently active tab. It also allows access to <a href="https://developer.chrome.com/docs/extensions/mv3/manifest/activeTab/#what-activeTab-allows" target="_blank" rel="noreferrer">sensitive properties</a> of the current tab.</p><p>This permission is enabled when the user <strong><em>invokes</em></strong> the extension. In this case, the user invokes the extension by clicking on the extension action.</p><p>\u{1F4A1} <strong>What other user interactions enable the activeTab permission in my own extension?</strong></p><ul><li>Pressing a keyboard shortcut combination.</li><li>Selecting a context menu item.</li><li>Accepting a suggestion from the omnibox.</li><li>Opening an extension popup.</li></ul><p>The <code>activeTab</code> permission allows users to <em>purposefully</em> choose to run the extension on the focused tab; this way, it protects the user\u2019s privacy. Another benefit is that it does not trigger a <a href="https://developer.chrome.com/docs/extensions/mv3/permission_warnings/#required_permissions" target="_blank" rel="noreferrer">permission warning</a>.</p><p>To use the <code>activeTab</code> permission, add it to the manifest&#39;s permission array:</p><pre><code>{  ...  &quot;permissions&quot;: [&quot;activeTab&quot;],  ...}
</code></pre><h3 id="step-4-track-the-state-of-the-current-tab" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-4" target="_blank" rel="noreferrer">#</a> Step 4: Track the state of the current tab <a class="header-anchor" href="#step-4-track-the-state-of-the-current-tab" aria-hidden="true">#</a></h3><p>After the user clicks on the extension action, the extension will check if the URL matches a documentation page. Next, it will check the state of the current tab and set the next state. Add the following code to <code>background.js</code>:</p><pre><code>const extensions = &#39;https://developer.chrome.com/docs/extensions&#39;const webstore = &#39;https://developer.chrome.com/docs/webstore&#39;chrome.action.onClicked.addListener(async (tab) =&gt; {  if (tab.url.startsWith(extensions) || tab.url.startsWith(webstore)) {    // Retrieve the action badge to check if the extension is &#39;ON&#39; or &#39;OFF&#39;    const prevState = await chrome.action.getBadgeText({ tabId: tab.id });    // Next state will always be the opposite    const nextState = prevState === &#39;ON&#39; ? &#39;OFF&#39; : &#39;ON&#39;    // Set the action badge to the next state    await chrome.action.setBadgeText({      tabId: tab.id,      text: nextState,    });...
</code></pre><h3 id="step-5-add-or-remove-the-stylesheet" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-5" target="_blank" rel="noreferrer">#</a> Step 5: Add or remove the stylesheet <a class="header-anchor" href="#step-5-add-or-remove-the-stylesheet" aria-hidden="true">#</a></h3><p>Now it&#39;s time to change the layout of the page. Create a file named <code>focus-mode.css</code> and include the following code:</p><pre><code>body &gt; .scaffold &gt; :is(top-nav, navigation-rail, side-nav, footer),main &gt; :not(:last-child),main &gt; :last-child &gt; navigation-tree,main .toc-container {  display: none;}main &gt; :last-child {  margin-top: min(10vmax, 10rem);  margin-bottom: min(10vmax, 10rem);}
</code></pre><p>Let&#39;s insert or remove the stylesheet using the <a href="https://developer.chrome.com/docs/extensions/reference/scripting/" target="_blank" rel="noreferrer">Scripting</a> API. Start by declaring the <code>&quot;scripting&quot;</code> permission in the manifest:</p><pre><code>{  ...  &quot;permissions&quot;: [&quot;activeTab&quot;, &quot;scripting&quot;],  ...}
</code></pre><p>Success</p><p>The Scripting API does not trigger a <a href="https://developer.chrome.com/docs/extensions/mv3/permission_warnings/#required_permissions" target="_blank" rel="noreferrer">permission warning</a>.</p><p>Finally, in <code>background.js</code> add the following code to change the layout of the page:</p><pre><code>  ...    if (nextState === &quot;ON&quot;) {      // Insert the CSS file when the user turns the extension on      await chrome.scripting.insertCSS({        files: [&quot;focus-mode.css&quot;],        target: { tabId: tab.id },      });    } else if (nextState === &quot;OFF&quot;) {      // Remove the CSS file when the user turns the extension off      await chrome.scripting.removeCSS({        files: [&quot;focus-mode.css&quot;],        target: { tabId: tab.id },      });    }  }});
</code></pre><p>\u{1F4A1} <strong>Can I use the Scripting API to inject code instead of a stylesheet?</strong></p><p>Yes! You can use <a href="https://developer.chrome.com/docs/extensions/reference/scripting/#injected-code" target="_blank" rel="noreferrer"><code>scripting.executeScript()</code></a> to inject JavaScript.</p><h3 id="optional-assign-a-keyboard-shortcut" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#step-6" target="_blank" rel="noreferrer">#</a> <em>Optional: Assign a keyboard shortcut</em> <a class="header-anchor" href="#optional-assign-a-keyboard-shortcut" aria-hidden="true">#</a></h3><p>Just for fun, let&#39;s add a shortcut to make it easier to enable or disable focus mode. Add the <code>&quot;commands&quot;</code> key to the manifest.</p><pre><code>{  ...  &quot;commands&quot;: {    &quot;_execute_action&quot;: {      &quot;suggested_key&quot;: {        &quot;default&quot;: &quot;Ctrl+U&quot;,        &quot;mac&quot;: &quot;Command+U&quot;      }    }  }}
</code></pre><p>The <code>&quot;_execute_action&quot;</code> key runs the same code as the <code>action.onClicked()</code> event, so no additional code is needed!</p><h2 id="test-that-it-works" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#try-out" target="_blank" rel="noreferrer">#</a> Test that it works <a class="header-anchor" href="#test-that-it-works" aria-hidden="true">#</a></h2><p>Verify that the file structure of your project looks like the following:</p><p>![The contents of the focus mode folder: manifest.json, background.js, focus-mode.css, and images folder.](./Focus Mode - Chrome Developers_files/S86ooJMjFm5uvf906u9a.png)</p><h3 id="load-your-extension-locally" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#locally" target="_blank" rel="noreferrer">#</a> Load your extension locally <a class="header-anchor" href="#load-your-extension-locally" aria-hidden="true">#</a></h3><p>To load an unpacked extension in developer mode, follow the steps in <a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics#load-unpacked" target="_blank" rel="noreferrer">Development Basics</a>.</p><h3 id="test-the-extension-on-a-documentation-page" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#open-sites" target="_blank" rel="noreferrer">#</a> Test the extension on a documentation page <a class="header-anchor" href="#test-the-extension-on-a-documentation-page" aria-hidden="true">#</a></h3><p>First, open any of the following pages:</p><ul><li><a href="https://developer.chrome.com/docs/extensions/mv3/" target="_blank" rel="noreferrer">Welcome to the Chrome Extension documentation</a></li><li><a href="https://developer.chrome.com/docs/webstore/publish/" target="_blank" rel="noreferrer">Publish in the Chrome Web Store</a></li><li><a href="https://developer.chrome.com/docs/extensions/reference/scripting/" target="_blank" rel="noreferrer">Scripting API</a></li></ul><p>Then, click on the extension action. If you set up a keyboard shortcut (link), you can test it by pressing <code>Ctrl + U</code> or <code>Cmd + U</code>.</p><p>It should go from this:</p><p>![Focus Mode extension OFF](./Focus Mode - Chrome Developers_files/q9DOiy5Y6m8eTp182PgP.png)</p><p>Focus Mode extension off</p><p>To this:</p><p>![Focus Mode extension ON](./Focus Mode - Chrome Developers_files/e7y4UD1rjmk1yqiVmnoP.png)</p><p>Focus Mode extension on</p><h2 id="\u{1F3AF}-potential-enhancements" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#challenge" target="_blank" rel="noreferrer">#</a> \u{1F3AF} Potential enhancements <a class="header-anchor" href="#\u{1F3AF}-potential-enhancements" aria-hidden="true">#</a></h2><p>Based on what you\u2019ve learned today, try to accomplish any of the following:</p><ul><li>Improve the CSS stylesheet.</li><li>Assign a different keyboard shortcut.</li><li>Change the layout of your favorite blog or documentation site.</li></ul><h2 id="keep-building" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue" target="_blank" rel="noreferrer">#</a> Keep building! <a class="header-anchor" href="#keep-building" aria-hidden="true">#</a></h2><p>Congratulations on finishing this tutorial \u{1F389}. Continue leveling up your skills by completing other tutorials on this series:</p><p>Extension</p><p>What you will learn</p><p><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-reading-time/" target="_blank" rel="noreferrer">Reading time</a></p><p>To insert an element on a specific set of pages automatically.</p><p><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-tabs-manager/" target="_blank" rel="noreferrer">Tabs Manager</a></p><p>To create a popup that manages browser tabs.</p><h2 id="continue-exploring" tabindex="-1"><a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/tut-focus-mode/#continue-exploring" target="_blank" rel="noreferrer">#</a> Continue exploring <a class="header-anchor" href="#continue-exploring" aria-hidden="true">#</a></h2><p>We hope you enjoyed building this Chrome extension and are excited to continue your Chrome development learning journey. We recommend the following learning paths:</p><ul><li>The <a href="https://developer.chrome.com/docs/extensions/mv3/architecture-overview/" target="_blank" rel="noreferrer">Chrome Extension Architecture</a> backs up a bit and fills in a lot of detail about the Extensions architecture in general.</li><li>The <a href="https://developer.chrome.com/docs/extensions/mv3/devguide/" target="_blank" rel="noreferrer">developer&#39;s guide</a> has dozens of additional links to pieces of documentation relevant to advanced extension creation.</li><li>Extensions have access to powerful APIs beyond what&#39;s available on the open web. The <a href="https://developer.chrome.com/docs/extensions/reference/" target="_blank" rel="noreferrer">Chrome APIs documentation</a> walks through each API.</li></ul><p>Updated on Tuesday, October 4, 2022 \u2022 <a href="https://github.com/GoogleChrome/developer.chrome.com/blob/main/site/en/docs/extensions/mv3/getstarted/tut-focus-mode/index.md" target="_blank" rel="noreferrer">Improve article</a></p>`,86),a=[s];function i(l,c,d,h,p,u){return t(),o("div",null,a)}const g=e(n,[["render",i]]);export{f as __pageData,g as default};
