import{_ as e,o as t,c as o,a}from"./app.4ab4139b.js";const g=JSON.parse('{"title":"Match patterns","description":"","frontmatter":{},"headers":[],"relativePath":"chromedocs/In depth_ core concepts/Match patterns - Chrome Developers.md","lastUpdated":1679926139000}'),r={name:"chromedocs/In depth_ core concepts/Match patterns - Chrome Developers.md"},c=a(`<h1 id="match-patterns" tabindex="-1">Match patterns <a class="header-anchor" href="#match-patterns" aria-hidden="true">#</a></h1><p>Published on Tuesday, September 18, 2012 \u2022 Updated on Saturday, October 28, 2017</p><p><a href="https://developer.chrome.com/docs/extensions/mv3/declare_permissions#host-permissions" target="_blank" rel="noreferrer">Host permissions</a> and <a href="https://developer.chrome.com/docs/extensions/mv3/content_scripts/" target="_blank" rel="noreferrer">content script</a> matching are based on a set of URLs defined by match patterns. A match pattern is essentially a URL that begins with a permitted scheme (<code>http</code>, <code>https</code>, <code>file</code>, or <code>ftp</code>, and that can contain &#39;<code>*</code>&#39; characters. The special pattern <code>&lt;all_urls&gt;</code> matches any URL that starts with a permitted scheme. Each match pattern has 3 parts:</p><ul><li><p><em>scheme</em>\u2014for example, <code>http</code> or <code>file</code> or <code>*</code></p><p>Access to <code>file</code> URLs isn&#39;t automatic. The user must visit the extensions management page and opt in to <code>file</code> access for each extension that requests it.</p></li><li><p><em>host</em>\u2014for example, <code>www.google.com</code> or <code>*.google.com</code> or <code>*</code>; if the scheme is <code>file</code>, there is no <em>host</em> part</p></li><li><p><em>path</em>\u2014for example, <code>/*</code>, <code>/foo*</code>, or <code>/foo/bar</code>. The path must be present in a host permission, but is always treated as <code>/*</code>.</p></li></ul><p>Here&#39;s the basic syntax:</p><pre><code>&lt;url-pattern&gt; := &lt;scheme&gt;://&lt;host&gt;&lt;path&gt;&lt;scheme&gt; := &#39;*&#39; | &#39;http&#39; | &#39;https&#39; | &#39;file&#39; | &#39;ftp&#39; | &#39;urn&#39;&lt;host&gt; := &#39;*&#39; | &#39;*.&#39; &lt;any char except &#39;/&#39; and &#39;*&#39;&gt;+&lt;path&gt; := &#39;/&#39; &lt;any chars&gt;
</code></pre><p>The meaning of &#39;<code>*</code>&#39; depends on whether it&#39;s in the <em>scheme</em>, <em>host</em>, or <em>path</em> part. If the <em>scheme</em> is <code>*</code>, then it matches either <code>http</code> or <code>https</code>, and <strong>not</strong> <code>file</code>, <code>ftp</code>, or <code>urn</code>. If the <em>host</em> is just <code>*</code>, then it matches any host. If the <em>host</em> is <code>*._hostname_</code>, then it matches the specified host or any of its subdomains. In the <em>path</em> section, each &#39;<code>*</code>&#39; matches 0 or more characters. The following table shows some valid patterns.</p><p>Note: <code>urn</code> scheme is available since Chrome 91.</p><p>Pattern</p><p>What it does</p><p>Examples of matching URLs</p><p><code>https://*/*</code></p><p>Matches any URL that uses the <code>https</code> scheme</p><p><a href="https://www.google.com/" target="_blank" rel="noreferrer">https://www.google.com/</a><br><a href="https://example.org/foo/bar.html" target="_blank" rel="noreferrer">https://example.org/foo/bar.html</a></p><p><code>https://*/foo*</code></p><p>Matches any URL that uses the <code>https</code> scheme, on any host, as long as the path starts with <code>/foo</code></p><p><a href="https://example.com/foo/bar.html" target="_blank" rel="noreferrer">https://example.com/foo/bar.html</a><br><a href="https://www.google.com/foo" target="_blank" rel="noreferrer">https://www.google.com/foo</a></p><p><code>https://*.google.com/foo*bar</code></p><p>Matches any URL that uses the <code>https</code> scheme, is on a <a href="http://google.com" target="_blank" rel="noreferrer">google.com</a> host (such as <a href="http://www.google.com" target="_blank" rel="noreferrer">www.google.com</a>, <a href="http://docs.google.com" target="_blank" rel="noreferrer">docs.google.com</a>, or <a href="http://google.com" target="_blank" rel="noreferrer">google.com</a>), as long as the path starts with <code>/foo</code> and ends with <code>bar</code></p><p><a href="https://www.google.com/foo/baz/bar" target="_blank" rel="noreferrer">https://www.google.com/foo/baz/bar</a><br><a href="https://docs.google.com/foobar" target="_blank" rel="noreferrer">https://docs.google.com/foobar</a></p><p><code>https://example.org/foo/bar.html</code></p><p>Matches the specified URL</p><p><a href="https://example.org/foo/bar.html" target="_blank" rel="noreferrer">https://example.org/foo/bar.html</a></p><p><code>file:///foo*</code></p><p>Matches any local file whose path starts with <code>/foo</code></p><p>file:///foo/bar.html<br> file:///foo</p><p><code>http://127.0.0.1/*</code></p><p>Matches any URL that uses the <code>http</code> scheme and is on the host 127.0.0.1</p><p><a href="http://127.0.0.1/" target="_blank" rel="noreferrer">http://127.0.0.1/</a><br><a href="http://127.0.0.1/foo/bar.html" target="_blank" rel="noreferrer">http://127.0.0.1/foo/bar.html</a></p><p><code>*://mail.google.com/*</code></p><p>Matches any URL that starts with <code>http://mail.google.com</code> or <code>https://mail.google.com</code>.</p><p><a href="http://mail.google.com/foo/baz/bar" target="_blank" rel="noreferrer">http://mail.google.com/foo/baz/bar</a><br><a href="https://mail.google.com/foobar" target="_blank" rel="noreferrer">https://mail.google.com/foobar</a></p><p><code>urn:*</code></p><p>Matches any URL that starts with <code>urn:</code>.</p><p>urn:uuid:54723bea-c94e-480e-80c8-a69846c3f582<br> urn:uuid:cfa40aff-07df-45b2-9f95-e023bcf4a6da</p><p><code>&lt;all_urls&gt;</code></p><p>Matches any URL that uses a permitted scheme. (See the beginning of this section for the list of permitted schemes.)</p><p><a href="http://example.org/foo/bar.html" target="_blank" rel="noreferrer">http://example.org/foo/bar.html</a><br> file:///bar/baz.html</p><p>Here are some examples of <em>invalid</em> pattern matches:</p><p>Bad pattern</p><p>Why it&#39;s bad</p><p><code>https://www.google.com</code></p><p>No <em>path</em></p><p><code>https://*foo/bar</code></p><p>&#39;*&#39; in the <em>host</em> can be followed only by a &#39;.&#39; or &#39;/&#39;</p><p><code>https://foo.*.bar/baz\xA0</code></p><p>If &#39;*&#39; is in the <em>host</em>, it must be the first character</p><p><code>http:/bar</code></p><p>Missing <em>scheme</em> separator (&quot;/&quot; should be &quot;//&quot;)</p><p><code>foo://*</code></p><p>Invalid <em>scheme</em></p><p>Some schemes are not supported in all contexts.</p><p>Updated on Saturday, October 28, 2017 \u2022 <a href="https://github.com/GoogleChrome/developer.chrome.com/blob/main/site/en/docs/extensions/mv3/match_patterns/index.md" target="_blank" rel="noreferrer">Improve article</a></p>`,53),s=[c];function p(h,d,n,l,m,i){return t(),o("div",null,s)}const b=e(r,[["render",p]]);export{g as __pageData,b as default};
